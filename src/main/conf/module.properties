ModuleDescription=The TOSCA Designer module is a component within TOSCA-based cloud orchestration frameworks that facilitates the creation, editing, and visualization of TOSCA-compliant application and service templates. This module typically provides a graphical user interface (GUI) or integrated development environment (IDE) where users can visually design, model, and manipulate TOSCA templates, including topology templates, node types, relationship types, policies, and plans.
ModuleLabel=TOSCA Designercocommand.Export.label=Export
command.Export.tooltip=Export the current model or selection to a TOSCA-compliant package (CSAR or YAML template).
command.Service_Template_Diagram.label=Service Template Diagram
command.Service_Template_Diagram.tooltip=Open or create a Service Template diagram to visualize service-level components and relationships.
command.Topology_Template_Diagram.label=Topology Template Diagram
command.Topology_Template_Diagram.tooltip=Open or create a Topology Template diagram to design node and relationship topology.
command.Tosca_Model.label=TOSCA Model
command.Tosca_Model.tooltip=Open the TOSCA model explorer for browsing templates, types, and definitions.
command.Tosca_Model_Diagram.label=TOSCA Model Diagram
command.Tosca_Model_Diagram.tooltip=Display the graphical diagram view for the current TOSCA model.

group.Artifacts.label=Artifacts
group.Attributes.label=Attributes
group.Capabilities.label=Capabilities
group.Constraints.label=Constraints
group.Others.label=Others
group.Plans.label=Plans
group.Policies.label=Policies
group.Policy.label=Policy
group.Requirement.label=Requirement
group.Requirements.label=Requirements
group.Service_Template.label=Service Template
group.Services.label=Services
group.Templates.label=Templates
group.Topology_Template.label=Topology Template
group.Types.label=Types

profile.Automatic.description=Profile that enables automatic detection and default behaviors for TOSCA elements in the designer.
profile.Automatic.label=Automatic
profile.Tosca.description=Profile for editing and validating TOSCA-specific constructs and templates.
profile.Tosca.label=TOSCA
propertydefinition.CapabilitiesTypePropertyPage.name.description=The capability's name used to identify this capability within a node type or template.
propertydefinition.CapabilitiesTypePropertyPage.name.label=name
propertydefinition.ImportElementPropertyTable.File.description=Filesystem path or URI of the file to import.
propertydefinition.ImportElementPropertyTable.File.label=File
propertydefinition.ImportElementPropertyTable.Namespace_prefix.description=XML namespace prefix to apply for the imported elements.
propertydefinition.ImportElementPropertyTable.Namespace_prefix.label=Namespace prefix
propertydefinition.ImportElementPropertyTable.Namespace_uri.description=The XML namespace URI referenced by the import entry.
propertydefinition.ImportElementPropertyTable.Namespace_uri.label=Namespace URI
propertydefinition.InstanceStateTypeTable.state.description=Runtime state of an instance, for example 'running', 'stopped', or 'failed'.
propertydefinition.InstanceStateTypeTable.state.label=state
propertydefinition.NodeOperationTypeTable.interfaceName.description=Name of the interface that declares the operation.
propertydefinition.NodeOperationTypeTable.interfaceName.label=interfaceName
propertydefinition.NodeOperationTypeTable.nodeRef.description=Reference to the node this operation is bound to.
propertydefinition.NodeOperationTypeTable.nodeRef.label=nodeRef
propertydefinition.NodeOperationTypeTable.opertationName.description=Name of the operation to invoke on the interface.
propertydefinition.NodeOperationTypeTable.opertationName.label=opertationName
propertydefinition.NodeTypeReferenceTypeTable.typeRef.description=Reference to a node type defined in the model or an imported namespace.
propertydefinition.NodeTypeReferenceTypeTable.typeRef.label=typeRef
propertydefinition.PropertiesDefinitionType.description.description=Human-readable description for the property definition.
propertydefinition.PropertiesDefinitionType.description.label=Description
propertydefinition.PropertiesDefinitionType.element_property.description=Name of the element-level property used by this definition.
propertydefinition.PropertiesDefinitionType.element_property.label=Element property
propertydefinition.PropertiesDefinitionType.required.description=Indicates whether this property is required for instances of the type.
propertydefinition.PropertiesDefinitionType.required.label=Required
propertydefinition.PropertiesDefinitionType.type.description=Data type of the property (e.g., string, integer, boolean, map, list).
propertydefinition.PropertiesDefinitionType.type.label=Type
propertydefinition.PropertiesType1Table.any.description=Placeholder for additional property entries not explicitly modeled.
propertydefinition.PropertiesType1Table.any.label=Any
propertydefinition.PropertiesType1Table.propertyMappings.description=Mappings from service template properties to node template properties.
propertydefinition.PropertiesType1Table.propertyMappings.label=Property mappings
propertydefinition.PropertyDefinitionTypeTable.description.description=Description text explaining the purpose and constraints of this property.
propertydefinition.PropertyDefinitionTypeTable.description.label=Description
propertydefinition.PropertyDefinitionTypeTable.required.description=Whether the property must be provided when instantiating the entity.
propertydefinition.PropertyDefinitionTypeTable.required.label=Required
propertydefinition.RelationshipConstraintTypeTable.any.description=Generic holder for relationship constraint information.
propertydefinition.RelationshipConstraintTypeTable.any.label=Any
propertydefinition.RelationshipConstraintTypeTable.constraintType.description=The specific constraint type applied to a relationship (e.g., range, pattern).
propertydefinition.RelationshipConstraintTypeTable.constraintType.label=Constraint type
propertydefinition.RelationshipOperationTypeTable.interfaceName.description=Interface that declares the relationship operation.
propertydefinition.RelationshipOperationTypeTable.interfaceName.label=interfaceName
propertydefinition.RelationshipOperationTypeTable.operationName.description=Name of the operation provided by the relationship interface.
propertydefinition.RelationshipOperationTypeTable.operationName.label=operationName
propertydefinition.RelationshipOperationTypeTable.relationshipRef.description=Reference to the relationship type that defines this operation.
propertydefinition.RelationshipOperationTypeTable.relationshipRef.label=relationshipRef
propertydefinition.TArtifactReferenceTable.exclude.description=Flag indicating whether this artifact reference should be excluded from packaging or processing.
propertydefinition.TArtifactReferenceTable.exclude.label=exclude
propertydefinition.TArtifactReferenceTable.group.description=Optional group identifier for the artifact reference, used to organize related artifacts.
propertydefinition.TArtifactReferenceTable.group.label=group
propertydefinition.TArtifactReferenceTable.include.description=Flag indicating whether this artifact reference should be included in the package or model.
propertydefinition.TArtifactReferenceTable.include.label=include
propertydefinition.TArtifactReferenceTable.reference.description=Reference identifier or URI pointing to the external artifact resource.
propertydefinition.TArtifactReferenceTable.reference.label=reference
propertydefinition.TArtifactTemplateTable.artifactReferences.description=List of references to artifacts associated with this artifact template.
propertydefinition.TArtifactTemplateTable.artifactReferences.label=artifactReferences
propertydefinition.TArtifactTemplateTable.name.description=Human-readable name of the artifact template.
propertydefinition.TArtifactTemplateTable.name.label=name
propertydefinition.TBoundaryDefinitionsTable.capabilities.description=Capabilities defined at the service boundary that apply to the service template.
propertydefinition.TBoundaryDefinitionsTable.capabilities.label=capabilities
propertydefinition.TBoundaryDefinitionsTable.interfaces.description=Contract interfaces exposed at the service boundary.
propertydefinition.TBoundaryDefinitionsTable.interfaces.label=interfaces
propertydefinition.TBoundaryDefinitionsTable.policies.description=Policies attached to the service boundary.
propertydefinition.TBoundaryDefinitionsTable.policies.label=policies
propertydefinition.TBoundaryDefinitionsTable.properties.description=Properties defined at the boundary level for the service template.
propertydefinition.TBoundaryDefinitionsTable.properties.label=properties
propertydefinition.TBoundaryDefinitionsTable.propertyConstraints.description=Constraints that apply to the boundary properties.
propertydefinition.TBoundaryDefinitionsTable.propertyConstraints.label=propertyConstraints
propertydefinition.TBoundaryDefinitionsTable.requirements.description=Requirements that the service boundary expects from its environment.
propertydefinition.TBoundaryDefinitionsTable.requirements.label=requirements
propertydefinition.TCapabilityDefinitionTable.constraints.description=Constraints that limit or validate values for this capability.
propertydefinition.TCapabilityDefinitionTable.constraints.label=constraints
propertydefinition.TCapabilityDefinitionTable.lowerBound.description=Minimum number of instances or lower bound for the capability multiplicity.
propertydefinition.TCapabilityDefinitionTable.lowerBound.label=lowerBound
propertydefinition.TCapabilityDefinitionTable.upperBound.description=Maximum number of instances or upper bound for the capability multiplicity.
propertydefinition.TCapabilityDefinitionTable.upperBound.label=upperBound
propertydefinition.TCapabilityRefTable.name.description=Name of the referenced capability.
propertydefinition.TCapabilityRefTable.name.label=name
propertydefinition.TCapabilityRefTable.ref.description=Reference ID to a capability definition elsewhere in the model.
propertydefinition.TCapabilityRefTable.ref.label=ref
propertydefinition.TConditionTable.any.description=Generic container for condition expressions and related metadata.
propertydefinition.TConditionTable.any.label=any
propertydefinition.TConditionTable.expressionLanguage.description=The expression language used to evaluate the condition (e.g., XPath, SPEL).
propertydefinition.TConditionTable.expressionLanguage.label=expressionLanguage
propertydefinition.TConstraintTable.any.description=Generic holder for constraint entries on properties or parameters.
propertydefinition.TConstraintTable.any.label=any
propertydefinition.TConstraintTable.constraintType.description=Type of constraint applied (for example 'greater-than', 'pattern', 'range').
propertydefinition.TConstraintTable.constraintType.label=constraintType
propertydefinition.TDefinitionTable.artifactTemplate.description=Template that defines artifact structure and metadata.
propertydefinition.TDefinitionTable.artifactTemplate.label=artifactTemplate
propertydefinition.TDefinitionTable.artifactType.description=Type identifier for artifacts associated with this definition.
propertydefinition.TDefinitionTable.artifactType.label=artifactType
propertydefinition.TDefinitionTable.capabilityType.description=Capability type associated with this definition.
propertydefinition.TDefinitionTable.capabilityType.label=capabilityType
propertydefinition.TDefinitionTable.extensions.description=Extension elements that allow additional, tool-specific metadata.
propertydefinition.TDefinitionTable.extensions.label=extensions
propertydefinition.TDefinitionTable.group.description=Optional grouping label for organizing definitions.
propertydefinition.TDefinitionTable.group.label=group
propertydefinition.TDefinitionTable.id.description=Unique identifier for this definition element.
propertydefinition.TDefinitionTable.id.label=id
propertydefinition.TDefinitionTable.import.description=Import entry specifying external namespaces or resources referenced by definitions.
propertydefinition.TDefinitionTable.import.label=import
propertydefinition.TDefinitionTable.name.description=Name assigned to this definition for display and referencing.
propertydefinition.TDefinitionTable.name.label=name
propertydefinition.TDefinitionTable.nodeType.description=Node type associated with this definition, if any.
propertydefinition.TDefinitionTable.nodeType.label=nodeType
propertydefinition.TDefinitionTable.nodeTypeImplementation.description=Reference to an implementation artifact or plan for the node type.
propertydefinition.TDefinitionTable.nodeTypeImplementation.label=nodeTypeImplementation
propertydefinition.TDefinitionTable.policyTemplate.description=Policy template that applies governance or constraints to entities.
propertydefinition.TDefinitionTable.policyTemplate.label=policyTemplate
propertydefinition.TDefinitionTable.policyType.description=Type of policy that this policy template refers to.
propertydefinition.TDefinitionTable.policyType.label=policyType
propertydefinition.TDefinitionTable.relationshipType.description=Type of relationship defined between node types or templates.
propertydefinition.TDefinitionTable.relationshipType.label=relationshipType
propertydefinition.TDefinitionTable.relationshipTypeImplementation.description=Implementation details or artifacts for the relationship type.
propertydefinition.TDefinitionTable.relationshipTypeImplementation.label=relationshipTypeImplementation
propertydefinition.TDefinitionTable.requirementType.description=Requirement type expected by nodes or templates.
propertydefinition.TDefinitionTable.requirementType.label=requirementType
propertydefinition.TDefinitionTable.serviceTemplate.description=Service template that groups node templates, policies and relationships.
propertydefinition.TDefinitionTable.serviceTemplate.label=serviceTemplate
propertydefinition.TDefinitionTable.targetNamespace.description=The target XML namespace for definitions declared here.
propertydefinition.TDefinitionTable.targetNamespace.label=targetNamespace
propertydefinition.TDefinitionTable.types.description=Collection of type definitions included in this definitions section.
propertydefinition.TDefinitionTable.types.label=types
propertydefinition.TDeploymentArtifactTable.artifact_version.description=Version identifier for the deployment artifact.
propertydefinition.TDeploymentArtifactTable.artifact_version.label=Artifact Version
propertydefinition.TDeploymentArtifactTable.checksum.description=Checksum value used to verify the artifact integrity.
propertydefinition.TDeploymentArtifactTable.checksum.label=checksum
propertydefinition.TDeploymentArtifactTable.checksum_algortihm.description=Algorithm used to compute the checksum (e.g., SHA-256).
propertydefinition.TDeploymentArtifactTable.checksum_algortihm.label=Checksum Algorithm
propertydefinition.TDeploymentArtifactTable.deploy_path.description=Target path or location where the artifact should be deployed.
propertydefinition.TDeploymentArtifactTable.deploy_path.label=Deploy Path
propertydefinition.TDeploymentArtifactTable.description.description=Human-readable description of the deployment artifact.
propertydefinition.TDeploymentArtifactTable.description.label=description
propertydefinition.TDeploymentArtifactTable.file.description=File name or relative path of the artifact file.
propertydefinition.TDeploymentArtifactTable.file.label=file
propertydefinition.TDeploymentArtifactTable.repository.description=Repository identifier or URL where the artifact is stored.
propertydefinition.TDeploymentArtifactTable.repository.label=repository
propertydefinition.TDocumentationTable.any.description=Generic documentation content (may include text, links, or structured docs).
propertydefinition.TDocumentationTable.any.label=any
propertydefinition.TDocumentationTable.lang.description=Language code (e.g., 'en', 'fr') for the documentation entry.
propertydefinition.TDocumentationTable.lang.label=lang
propertydefinition.TDocumentationTable.mixed.description=Indicates whether the documentation content contains mixed content (text + markup).
propertydefinition.TDocumentationTable.mixed.label=mixed
propertydefinition.TDocumentationTable.source.description=Source reference or URI for the documentation content.
propertydefinition.TDocumentationTable.source.label=source
propertydefinition.TEntityTemplatePropertyTable.description.description=Description for the entity template, explaining purpose and usage.
propertydefinition.TEntityTemplatePropertyTable.description.label=description
propertydefinition.TEntityTemplatePropertyTable.id.description=Identifier for the entity template instance.
propertydefinition.TEntityTemplatePropertyTable.id.label=id
propertydefinition.TEntityTemplatePropertyTable.properties.description=Properties defined for this entity template instance.
propertydefinition.TEntityTemplatePropertyTable.properties.label=properties
propertydefinition.TEntityTemplatePropertyTable.propertyConstraints.description=Constraints applied to the entity template properties.
propertydefinition.TEntityTemplatePropertyTable.propertyConstraints.label=propertyConstraints
propertydefinition.TEntityTemplatePropertyTable.type.description=Type identifier for the entity template.
propertydefinition.TEntityTemplatePropertyTable.type.label=type
propertydefinition.TEntityTypePropertyTable.abstract.description=Whether this entity type is abstract and cannot be instantiated directly.
propertydefinition.TEntityTypePropertyTable.abstract.label=abstract
propertydefinition.TEntityTypePropertyTable.description.description=Human-readable description of the entity type.
propertydefinition.TEntityTypePropertyTable.description.label=description
propertydefinition.TEntityTypePropertyTable.final.description=Indicates if the entity type is final and cannot be further specialized.
propertydefinition.TEntityTypePropertyTable.final.label=final
propertydefinition.TEntityTypePropertyTable.name.description=Name of the entity type.
propertydefinition.TEntityTypePropertyTable.name.label=name
propertydefinition.TEntityTypePropertyTable.propertiesDefinition.description=Definitions of properties available for this entity type.
propertydefinition.TEntityTypePropertyTable.propertiesDefinition.label=propertiesDefinition
propertydefinition.TEntityTypePropertyTable.tags.description=Optional tags or categories assigned to the entity type.
propertydefinition.TEntityTypePropertyTable.tags.label=tags
propertydefinition.TEntityTypePropertyTable.targetNamespace.description=Target namespace in which this entity type is defined.
propertydefinition.TEntityTypePropertyTable.targetNamespace.label=targetNamespace
propertydefinition.TExportedOperationTable.nodeOperation.description=Reference to a node operation that is exported by the template.
propertydefinition.TExportedOperationTable.nodeOperation.label=nodeOperation
propertydefinition.TExportedOperationTable.plan.description=Reference to a plan or workflow that can be invoked externally.
propertydefinition.TExportedOperationTable.plan.label=plan
propertydefinition.TExportedOperationTable.relationshipOperation.description=Reference to an operation provided by a relationship type.
propertydefinition.TExportedOperationTable.relationshipOperation.label=relationshipOperation
propertydefinition.TExtensibleElementsTable.metadata.description=Key/value metadata entries attached to extensible elements.
propertydefinition.TExtensibleElementsTable.metadata.label=metadata
propertydefinition.TExtensionTable.mustUnderstand.description=Indicates whether the extension must be understood by processors.
propertydefinition.TExtensionTable.mustUnderstand.label=mustUnderstand
propertydefinition.TExtensionTable.namespace.description=XML namespace associated with the extension element.
propertydefinition.TExtensionTable.namespace.label=namespace
propertydefinition.TImplementationArtifactTable.artifactRef.description=Reference to the implementation artifact that provides executable or deployable content.
propertydefinition.TImplementationArtifactTable.artifactRef.label=artifactRef
propertydefinition.TImplementationArtifactTable.artifactType.description=Type of the implementation artifact (e.g., script, binary, container image).
propertydefinition.TImplementationArtifactTable.artifactType.label=artifactType
propertydefinition.TImplementationArtifactTable.interfaceName.description=Name of the interface that the implementation artifact targets.
propertydefinition.TImplementationArtifactTable.interfaceName.label=interfaceName
propertydefinition.TImplementationArtifactTable.operationName.description=Name of the operation implemented by this artifact.
propertydefinition.TImplementationArtifactTable.operationName.label=operationName
propertydefinition.TInterfaceTable.notifications.description=Notifications produced by operations defined in the interface.
propertydefinition.TInterfaceTable.notifications.label=notifications
propertydefinition.TNodeTemplateProperty.maxInstances.description=Maximum number of node instances allowed for this template.
propertydefinition.TNodeTemplateProperty.maxInstances.label=maxInstances
propertydefinition.TNodeTemplateProperty.minInstances.description=Minimum number of node instances required for this template.
propertydefinition.TNodeTemplateProperty.minInstances.label=minInstances
propertydefinition.TNodeTemplateProperty.name.description=Display name of the node template.
propertydefinition.TNodeTemplateProperty.name.label=name
propertydefinition.TOperationTable.description.description=Description of the operation, its purpose and expected behavior.
propertydefinition.TOperationTable.description.label=description
propertydefinition.TOperationTable.implementation.description=Reference to the implementation artifact or script for this operation.
propertydefinition.TOperationTable.implementation.label=implementation
propertydefinition.TOperationTable.inputs.description=Input parameters expected by the operation.
propertydefinition.TOperationTable.inputs.label=inputs
propertydefinition.TOperationTable.name.description=Operation name used to invoke the behavior.
propertydefinition.TOperationTable.name.label=name
propertydefinition.TOperationTable.outputs.description=Output parameters produced by the operation.
propertydefinition.TOperationTable.outputs.label=outputs
propertydefinition.TParameterTable.constraints.description=Constraints applied to the parameter values.
propertydefinition.TParameterTable.constraints.label=constraints
propertydefinition.TParameterTable.default.description=Default value used when no explicit value is provided.
propertydefinition.TParameterTable.default.label=default
propertydefinition.TParameterTable.description.description=Human-readable description of the parameter.
propertydefinition.TParameterTable.description.label=description
propertydefinition.TParameterTable.name.description=Name of the parameter.
propertydefinition.TParameterTable.name.label=name
propertydefinition.TParameterTable.required.description=Whether the parameter is required for operation or plan execution.
propertydefinition.TParameterTable.required.label=required
propertydefinition.TParameterTable.status.description=Status or lifecycle state for the parameter (if applicable).
propertydefinition.TParameterTable.status.label=status
propertydefinition.TParameterTable.type.description=Data type of the parameter (string, integer, boolean, map, list).
propertydefinition.TParameterTable.type.label=type
propertydefinition.TParameterTable.value.description=Current value assigned to the parameter.
propertydefinition.TParameterTable.value.label=value
propertydefinition.TPlansPropertyTable.targetNamespace.description=Namespace under which plan definitions are grouped.
propertydefinition.TPlansPropertyTable.targetNamespace.label=targetNamespace
propertydefinition.TPolicyTable.description.description=Description of the policy and its intended effect.
propertydefinition.TPolicyTable.description.label=description
propertydefinition.TPolicyTable.policyRef.description=Reference to the policy definition applied to the target element (by id or name).
propertydefinition.TPolicyTable.policyRef.label=policyRef
propertydefinition.TPolicyTypePropertyPage.description.description=Detailed description of the policy type and how it should be used.
propertydefinition.TPolicyTypePropertyPage.description.label=description
propertydefinition.TPolicyTypePropertyPage.policyLanguage.description=The policy language or specification used (if any).
propertydefinition.TPolicyTypePropertyPage.policyLanguage.label=policyLanguage
propertydefinition.TPropertyMappingTable.serviceTemplatePropertyRef.description=Reference to a property defined in a related service template used for mapping values.
propertydefinition.TPropertyMappingTable.serviceTemplatePropertyRef.label=serviceTemplatePropertyRef
propertydefinition.TPropertyMappingTable.targetObjectRef.description=Reference to the object within the target where the mapped property will be applied.
propertydefinition.TPropertyMappingTable.targetObjectRef.label=targetObjectRef
propertydefinition.TPropertyMappingTable.targetPropertyRef.description=Reference to the specific target property that receives the mapped value.
propertydefinition.TPropertyMappingTable.targetPropertyRef.label=targetPropertyRef
propertydefinition.TRelationshipTypePropertyTable.validSource.description=Allowed source node types for this relationship type.
propertydefinition.TRelationshipTypePropertyTable.validSource.label=validSource
propertydefinition.TRelationshipTypePropertyTable.validTarget.description=Allowed target node types for this relationship type.
propertydefinition.TRelationshipTypePropertyTable.validTarget.label=validTarget
propertydefinition.TRequirementDefinitionTable.lowerBound.description=Minimum allowed occurrences for the requirement.
propertydefinition.TRequirementDefinitionTable.lowerBound.label=lowerBound
propertydefinition.TRequirementDefinitionTable.lowerBound.description=Minimum allowed occurrences for the requirement.
propertydefinition.TRequirementDefinitionTable.lowerBound.label=lowerBound
propertydefinition.TRequirementDefinitionTable.name.description=Identifier name of the requirement.
propertydefinition.TRequirementDefinitionTable.name.label=name
propertydefinition.TRequirementDefinitionTable.requirementType.description=Type of requirement expected (reference to a requirement definition).
propertydefinition.TRequirementDefinitionTable.requirementType.label=requirementType
propertydefinition.TRequirementDefinitionTable.upperBound.description=Maximum allowed occurrences for the requirement.
propertydefinition.TRequirementDefinitionTable.upperBound.label=upperBound
propertydefinition.TRequirementRefTable.name.description=Name of the referenced requirement.
propertydefinition.TRequirementRefTable.name.label=name
propertydefinition.TRequirementRefTable.name.description=Name of the referenced requirement.
propertydefinition.TRequirementRefTable.name.label=name
propertydefinition.TRequirementRefTable.ref.description=Reference identifier to the requirement definition in the template.
propertydefinition.TRequirementRefTable.ref.label=ref
propertydefinition.TServiceTemplatePropertyTable.boundaryDefinitions.description=Definitions that establish the boundary properties and constraints for the service template.
propertydefinition.TServiceTemplatePropertyTable.boundaryDefinitions.label=boundaryDefinitions
propertydefinition.TServiceTemplatePropertyTable.id.description=Unique identifier for the service template.
propertydefinition.TServiceTemplatePropertyTable.id.label=id
propertydefinition.TServiceTemplatePropertyTable.name.description=Human-readable name of the service template.
propertydefinition.TServiceTemplatePropertyTable.name.label=name
propertydefinition.TServiceTemplatePropertyTable.substitutableNodeType.description=Node type that can substitute the service template when used in other templates.
propertydefinition.TServiceTemplatePropertyTable.substitutableNodeType.label=substitutableNodeType
propertydefinition.TServiceTemplatePropertyTable.tags.description=Tags or keywords associated with the service template for categorization.
propertydefinition.TServiceTemplatePropertyTable.tags.label=tags
propertydefinition.TServiceTemplatePropertyTable.targetNamespace.description=Namespace URI under which the service template is defined.
propertydefinition.TServiceTemplatePropertyTable.targetNamespace.label=targetNamespace
propertydefinition.TargetElementTypePropertyTable.ref.description=Reference to the target element type used by this construct.
propertydefinition.TargetElementTypePropertyTable.ref.label=ref
propertydefinition.TargetElementTypePropertyTable.ref.description=Reference to the target element type used by this construct.
propertydefinition.TargetElementTypePropertyTable.ref.label=ref
propertydefinition.TriggerTable.action.description=Action to perform when the trigger condition is met.
propertydefinition.TriggerTable.action.label=action
propertydefinition.TriggerTable.condition.description=Condition expression that must be true to fire the trigger.
propertydefinition.TriggerTable.condition.label=condition
propertydefinition.TriggerTable.description.description=Human-readable description of the trigger and its intended behavior.
propertydefinition.TriggerTable.description.label=description
propertydefinition.TriggerTable.event.description=Event name or type that the trigger listens for.
propertydefinition.TriggerTable.event.label=event
propertydefinition.TriggerTable.schedule.description=Schedule specification for time-based triggers (cron or interval expression).
propertydefinition.TriggerTable.schedule.label=schedule
propertydefinition.TriggerTable.target_filter.description=Filter expression used to restrict which targets the trigger applies to.
propertydefinition.TriggerTable.target_filter.label=Target Filter
propertypage.ToscaPropertyPage.label=TOSCA Properties
propertytable.CapabilitiesTypePropertyPage.label=CapabilitiesTypePropertyPage
propertytable.ImportElementPropertyTable.label=ImportElementPropertyTable
propertytable.InstanceStateTypeTable.label=InstanceStateTypeTable
propertytable.NodeOperationTypeTable.label=NodeOperationTypeTable
propertytable.NodeTypeReferenceTypeTable.label=NodeTypeReferenceTypeTable
propertytable.PropertiesDefinitionType.label=PropertiesDefinitionType
propertytable.PropertiesType1Table.label=PropertiesType1Table
propertytable.PropertyDefinitionTypeTable.label=PropertyDefinitionTypeTable
propertytable.RelationshipConstraintTypeTable.label=RelationshipConstraintTypeTable
propertytable.RelationshipOperationTypeTable.label=RelationshipOperationTypeTable
propertytable.TArtifactReferenceTable.label=TArtifactReferenceTable
propertytable.TArtifactTemplateTable.label=TArtifactTemplateTable
propertytable.TBoundaryDefinitionsTable.label=TBoundaryDefinitionsTable
propertytable.TCapabilityDefinitionTable.label=TCapabilityDefinitionTable
propertytable.TCapabilityRefTable.label=TCapabilityRefTable
propertytable.TConditionTable.label=TConditionTable
propertytable.TConstraintTable.label=TConstraintTable
propertytable.TDefinitionTable.label=TDefinitionTable
propertytable.TDeploymentArtifactTable.label=TDeploymentArtifactTable
propertytable.TDocumentationTable.label=TDocumentationTable
propertytable.TEntityTemplatePropertyTable.label=TEntityTemplatePropertyTable
propertytable.TEntityTypePropertyTable.label=TEntityTypePropertyTable
propertytable.TExportedOperationTable.label=TExportedOperationTable
propertytable.TExtensibleElementsTable.label=TExtensibleElementsTable
propertytable.TExtensionTable.label=TExtensionTable
propertytable.TImplementationArtifactTable.label=TImplementationArtifactTable
propertytable.TInterfaceTable.label=TInterfaceTable
propertytable.TNodeTemplateProperty.label=TNodeTemplateProperty
propertytable.TOperationTable.label=TOperationTable
propertytable.TParameterTable.label=TParameterTable
propertytable.TPlansPropertyTable.label=TPlansPropertyTable
propertytable.TPolicyTable.label=TPolicyTable
propertytable.TPolicyTypePropertyPage.label=TPolicyTypePropertyPage
propertytable.TPropertyMappingTable.label=TPropertyMappingTable
propertytable.TRelationshipTypePropertyTable.label=TRelationshipTypePropertyTable
propertytable.TRequirementDefinitionTable.label=TRequirementDefinitionTable
propertytable.TRequirementRefTable.label=TRequirementRefTable
propertytable.TServiceTemplatePropertyTable.label=TServiceTemplatePropertyTable
propertytable.TargetElementTypePropertyTable.label=TargetElementTypePropertyTable
propertytable.TriggerTable.label=TriggerTable
propertytypeDerivedFromType.description=Type information about what this element is derived from.
propertytypeDerivedFromType.label=DerivedFromType
propertytypeDerivedFromType.description=Type information about what this element is derived from.
propertytypeDerivedFromType.label=DerivedFromType
propertytypeDerivedFromType1.description=Auxiliary derived-from type metadata (variant 1).
propertytypeDerivedFromType1.label=DerivedFromType1
propertytypeDerivedFromType2.description=Auxiliary derived-from type metadata (variant 2).
propertytypeDerivedFromType2.label=DerivedFromType2
propertytypeExcludeType.description=Definition of types or elements that are excluded by this filter.
propertytypeExcludeType.label=ExcludeType
propertytypeIncludeType.description=Definition of types or elements that are explicitly included by this filter.
propertytypeIncludeType.label=IncludeType
propertytypeInstanceStateType.description=Enumeration of instance states used to represent lifecycle or runtime state.
propertytypeInstanceStateType.label=InstanceStateType
propertytypeMaxInstancesType.description=Maximum number of instances allowed for a node or relationship.
propertytypeMaxInstancesType.label=MaxInstancesType
propertytypePlanModelReferenceType.description=Reference to an external plan model used by this template.
propertytypePlanModelReferenceType.label=PlanModelReferenceType
propertytypePlanModelType.description=Type information for plan models (workflow or orchestration artifacts).
propertytypePlanModelType.label=PlanModelType
propertytypePlanType.description=Logical classification of plans (e.g., build, configure, terminate).
propertytypePlanType.label=PlanType
propertytypePropertiesType.description=Container type for grouped property definitions.
propertytypePropertiesType.label=PropertiesType
propertytypeSourceElementType.description=Type descriptor for elements that can be a source in relationships or mappings.
propertytypeSourceElementType.label=SourceElementType
propertytypeTargetElementType.description=Type descriptor for elements that can be a target in relationships or mappings.
propertytypeTargetElementType.label=TargetElementType

stereotype.ArtifactReferencesType.description=References to implementation or auxiliary artifacts associated with the element.
stereotype.ArtifactReferencesType.label=ArtifactReferencesType
stereotype.CapabilitiesType.description=Collection of capability definitions describing what a node or component can provide.
stereotype.CapabilitiesType.label=CapabilitiesType
stereotype.CapabilitiesType1.description=Alternate capabilities collection used for extended capability metadata.
stereotype.CapabilitiesType1.label=CapabilitiesType1
stereotype.CapabilityStereotype.description=Metadata describing a capability's stereotype and additional attributes.
stereotype.CapabilityStereotype.label=CapabilityStereotype
stereotype.ConstraintType1.description=Alternate constraint definition type for element validation rules.
stereotype.ConstraintType1.label=ConstraintType1
stereotype.ConstraintsType.description=Collection of constraints that specify allowed values or relationships.
stereotype.ConstraintsType.label=ConstraintsType
stereotype.DefinitionType.description=Definition container for complex typed elements and their metadata.
stereotype.DefinitionType.label=DefinitionType
stereotype.DocumentRoot.description=Root element container for serialized document representations.
stereotype.DocumentRoot.label=DocumentRoot
stereotype.ExtensionType.description=Extension metadata type allowing additional schema elements.
stereotype.ExtensionType.label=ExtensionType
stereotype.ImplementationArtifactType.description=Description of artifacts used to implement node operations or interfaces.
stereotype.ImplementationArtifactType.label=ImplementationArtifactType
stereotype.ImportElement.description=Information about imported modules or external definitions referenced by this module.
stereotype.ImportElement.label=ImportElement
stereotype.InputParameterType1.description=Definition of an input parameter including name, type, and optional default value.
stereotype.InputParameterType1.label=InputParameterType1
stereotype.InputParametersType.description=Collection of input parameter definitions used by operations or interfaces.
stereotype.InputParametersType.label=InputParametersType
stereotype.InstanceStateType.description=Represents the runtime state information of an instance (for example, running, stopped).
stereotype.InstanceStateType.label=InstanceStateType
stereotype.InterfaceType1.description=Definition of an interface comprising operations and their inputs/outputs.
stereotype.InterfaceType1.label=InterfaceType1
stereotype.InterfacesType.description=A group of interface definitions available on a node or component.
stereotype.InterfacesType.label=InterfacesType
stereotype.Metadata.description=Key/value metadata entries attached to the element for informational or processing purposes.
stereotype.Metadata.label=Metadata
stereotype.NodeOperationType.description=Definition of a node operation, including inputs, implementation artifacts, and semantics.
stereotype.NodeOperationType.label=NodeOperationType
stereotype.NodeTypeReferenceType.description=Reference to a node type used to specify requirements or type-coupling.
stereotype.NodeTypeReferenceType.label=NodeTypeReferenceType
stereotype.OutputParameterType.description=Definition of an output parameter including its name and type produced by an operation.
stereotype.OutputParameterType.label=OutputParametersType
stereotype.OutputParametersType1.description=Collection of output parameter definitions returned by operations.
stereotype.OutputParametersType1.label=OutputParametersType1
stereotype.PoliciesType.description=Container stereotype holding policy entries attached to templates or nodes.
stereotype.PoliciesType.label=PoliciesType
stereotype.PoliciesType1.description=Alternate container for grouped policy definitions used in advanced templates.
stereotype.PoliciesType1.label=PoliciesType1
stereotype.PropertiesDefinitionType.description=Stereotype used to group property definitions belonging to an element.
stereotype.PropertiesDefinitionType.label=PropertiesDefinitionType
stereotype.PropertiesType1.description=Alternate properties container used by some TOSCA constructs.
stereotype.PropertiesType1.label=PropertiesType1
stereotype.PropertyConstraintsType.description=Stereotype grouping property constraint definitions for validation.
stereotype.PropertyConstraintsType.label=PropertyConstraintsType
stereotype.PropertyConstraintsType1.description=Variant container for property constraint groups.
stereotype.PropertyConstraintsType1.label=PropertyConstraintsType1
stereotype.PropertyDefinitionType.description=Stereotype marking an individual property definition and its metadata.
stereotype.PropertyDefinitionType.label=PropertyDefinitionType
stereotype.PropertyMappingsType.description=Stereotype containing mappings between properties of related templates or nodes.
stereotype.PropertyMappingsType.label=PropertyMappingsType
stereotype.RelationshipConstraintType.description=Stereotype defining constraints that apply to relationships between nodes.
stereotype.RelationshipConstraintType.label=RelationshipConstraintType
stereotype.RelationshipConstraintsType.description=Container stereotype for multiple relationship constraint entries.
stereotype.RelationshipConstraintsType.label=RelationshipConstraintsType
stereotype.RelationshipOperationType.description=Stereotype describing operations available on a relationship type.
stereotype.RelationshipOperationType.label=RelationshipOperationType
stereotype.RequirementsType.description=Stereotype container for requirement definitions attached to a node or template.
stereotype.RequirementsType.label=RequirementsType
stereotype.RequirementsType1.description=Variant container for grouped requirement definitions.
stereotype.RequirementsType1.label=RequirementsType1
stereotype.ServiceTemplateDiagram.description=Stereotype used for diagram artifacts representing a service template.
stereotype.ServiceTemplateDiagram.label=ServiceTemplateDiagram
stereotype.SourceElementType.description=Stereotype describing the source element type used in mappings or relations.
stereotype.SourceElementType.label=SourceElementType
stereotype.SourceInterfacesType.description=Stereotype container for interfaces exposed by a source element.
stereotype.SourceInterfacesType.label=SourceInterfacesType
stereotype.ArtifactReferencesType.description=Container stereotype describing artifact references associated with an element.
stereotype.ArtifactReferencesType.label=ArtifactReferencesType
stereotype.CapabilitiesType.description=Stereotype describing capabilities available on a node or component.
stereotype.CapabilitiesType.label=CapabilitiesType
stereotype.CapabilitiesType1.description=Alternate capabilities stereotype used for specialized capability groups.
stereotype.CapabilitiesType1.label=CapabilitiesType1
stereotype.CapabilityStereotype.description=Metadata stereotype used to mark a capability definition.
stereotype.CapabilityStereotype.label=CapabilityStereotype
stereotype.ConstraintType1.description=Schema or rule describing a constraint variant.
stereotype.ConstraintType1.label=ConstraintType1
stereotype.ConstraintsType.description=Collection stereotype for multiple constraint entries.
stereotype.ConstraintsType.label=ConstraintsType
stereotype.DefinitionType.description=Stereotype marking a top-level definition element in the model.
stereotype.DefinitionType.label=DefinitionType
stereotype.DocumentRoot.description=Root-level stereotype for document artifacts and wrapper elements.
stereotype.DocumentRoot.label=DocumentRoot
stereotype.ExtensionType.description=Stereotype describing extension metadata used by the model.
stereotype.ExtensionType.label=ExtensionType
stereotype.ImplementationArtifactType.description=Stereotype for artifacts that implement behavior (scripts, binaries).
stereotype.ImplementationArtifactType.label=ImplementationArtifactType
stereotype.ImportElement.description=Metadata describing an import entry and its source location.
stereotype.ImportElement.label=ImportElement
stereotype.InputParameterType1.description=Variant input parameter stereotype describing typed inputs.
stereotype.InputParameterType1.label=InputParameterType1
stereotype.InputParametersType.description=Container stereotype for input parameter lists.
stereotype.InputParametersType.label=InputParametersType
stereotype.InstanceStateType.description=Stereotype enumerating runtime instance states for elements.
stereotype.InstanceStateType.label=InstanceStateType
stereotype.InterfaceType1.description=Alternate interface stereotype for specialized operations.
stereotype.InterfaceType1.label=InterfaceType1
stereotype.InterfacesType.description=Container stereotype for interface collections.
stereotype.InterfacesType.label=InterfacesType
stereotype.Metadata.description=General-purpose metadata stereotype for additional element annotations.
stereotype.Metadata.label=Metadata
stereotype.NodeOperationType.description=Stereotype describing node-level operations and their signatures.
stereotype.NodeOperationType.label=NodeOperationType
stereotype.NodeTypeReferenceType.description=Stereotype used to reference node types by identifier.
stereotype.NodeTypeReferenceType.label=NodeTypeReferenceType
stereotype.OutputParameterType.description=Stereotype describing output parameters produced by operations.
stereotype.OutputParameterType.label=OutputParametersType
stereotype.OutputParametersType1.description=Alternate output-parameter stereotype (variant 1).
stereotype.OutputParametersType1.label=OutputParametersType1
stereotype.PoliciesType.description=Container stereotype for policy entries attached to templates.
stereotype.PoliciesType.label=PoliciesType
stereotype.PoliciesType1.description=Alternate policies container for grouped policy definitions.
stereotype.PoliciesType1.label=PoliciesType1
stereotype.PropertiesDefinitionType.description=Stereotype used to group property definitions of an element.
stereotype.PropertiesDefinitionType.label=PropertiesDefinitionType
stereotype.PropertiesType1.description=Alternate properties container used by some templates.
stereotype.PropertiesType1.label=PropertiesType1
stereotype.PropertyConstraintsType.description=Stereotype grouping property constraint definitions.
stereotype.PropertyConstraintsType.label=PropertyConstraintsType
stereotype.PropertyConstraintsType1.description=Alternate property-constraints group variant.
stereotype.PropertyConstraintsType1.label=PropertyConstraintsType1
stereotype.PropertyDefinitionType.description=Stereotype that marks an individual property definition element.
stereotype.PropertyDefinitionType.label=PropertyDefinitionType
stereotype.PropertyMappingsType.description=Container stereotype for property mapping entries.
stereotype.PropertyMappingsType.label=PropertyMappingsType
stereotype.RelationshipConstraintType.description=Stereotype defining constraints applicable to relationships.
stereotype.RelationshipConstraintType.label=RelationshipConstraintType
stereotype.RelationshipConstraintsType.description=Collection stereotype for relationship constraint entries.
stereotype.RelationshipConstraintsType.label=RelationshipConstraintsType
stereotype.RelationshipOperationType.description=Stereotype describing operations that apply to relationships.
stereotype.RelationshipOperationType.label=RelationshipOperationType
stereotype.RequirementsType.description=Container stereotype for requirement definitions attached to a node/template.
stereotype.RequirementsType.label=RequirementsType
stereotype.RequirementsType1.description=Alternate requirements container variant.
stereotype.RequirementsType1.label=RequirementsType1
stereotype.ServiceTemplateDiagram.description=Stereotype for diagram artifacts representing a service template.
stereotype.ServiceTemplateDiagram.label=ServiceTemplateDiagram
stereotype.SourceElementType.description=Type descriptor stereotype for sources used in mappings.
stereotype.SourceElementType.label=SourceElementType
stereotype.SourceInterfacesType.description=Container stereotype for interfaces exposed by a source element.
stereotype.SourceInterfacesType.label=SourceInterfacesType
stereotype.TAppliesTo.description=Defines the target scope or elements to which a rule, policy, or mapping applies.
stereotype.TAppliesTo.label=TAppliesTo
stereotype.TArtifactReference.description=Reference entry describing an external artifact by identifier, path, or URI.
stereotype.TArtifactReference.label=TArtifactReference
stereotype.TArtifactTemplate.description=Template describing an artifact and its associated metadata used by node or relationship types.
stereotype.TArtifactTemplate.label=TArtifactTemplate
stereotype.TArtifactType.description=Definition of an artifact type including expected attributes and usage semantics.
stereotype.TArtifactType.label=TArtifactType
stereotype.TBoundaryDefinitions.description=Container for definitions that establish service or template boundary constructs and constraints.
stereotype.TBoundaryDefinitions.label=TBoundaryDefinitions
stereotype.TCapability.description=Definition of a capability instance attached to a node or template.
stereotype.TCapability.label=TCapability
stereotype.TCapabilityDefinition.description=Definition of a capability type including properties and constraints.
stereotype.TCapabilityDefinition.label=TCapabilityDefinition
stereotype.TCapabilityDefinitionsType.description=Collection type grouping capability definitions.
stereotype.TCapabilityDefinitionsType.label=TCapabilityDefinitionsType
stereotype.TCapabilityRef.description=Reference to an existing capability definition by identifier.
stereotype.TCapabilityRef.label=TCapabilityRef
stereotype.TCapabilityType.description=Type descriptor for capability definitions used in templates and types.
stereotype.TCapabilityType.label=TCapabilityType
stereotype.TCondition.description=Container for conditional expressions or predicates used by triggers and policies.
stereotype.TCondition.label=TCondition
stereotype.TConstraint.description=Definition of a constraint rule applicable to properties or parameters.
stereotype.TConstraint.label=TConstraint
stereotype.TDefinition.description=Generic container for a type or element definition within the model.
stereotype.TDefinition.label=TDefinitions
stereotype.TDeploymentArtifact.description=Metadata describing a deployment artifact used during provisioning or runtime.
stereotype.TDeploymentArtifact.label=TDeploymentArtifact
stereotype.TDeploymentArtifacts.description=Collection of deployment artifacts attached to an element.
stereotype.TDeploymentArtifacts.label=TDeploymentArtifacts
stereotype.TDocumentation.description=Documentation entry providing human-readable information, links or content.
stereotype.TDocumentation.label=TDocumentation
stereotype.TEntityTemplate.description=Template instance describing a particular entity in the topology (node, relationship, etc.).
stereotype.TEntityTemplate.label=TEntityTemplate
stereotype.TEntityType.description=Type definition for an entity such as a node or relationship.
stereotype.TEntityType.label=TEntityType
stereotype.TExportedInterface.description=Definition of an interface exported by a template or type for external invocation.
stereotype.TExportedInterface.label=TExportedInterface
stereotype.TExportedOperation.description=Operation exposed by a template that can be invoked by external consumers.
stereotype.TExportedOperation.label=TExportedOperation
stereotype.TExtensibleElements.description=Container for extension elements that allow tool-specific additional metadata.
stereotype.TExtensibleElements.label=TExtensibleElements
stereotype.TExtension.description=Definition of a single extension element carrying extra metadata for processing.
stereotype.TExtension.label=TExtension
stereotype.TExtensions.description=Collection of extension elements attached to a model element.
stereotype.TExtensions.label=TExtensions
stereotype.TGroup.description=Definition of a group of related topology elements used for composition or policy application.
stereotype.TGroup.label=TGroup
stereotype.TGroupType.description=Type definition that describes the semantics and properties of a group.
stereotype.TGroupType.label=TGroupType
stereotype.TImplementationArtifact.description=Descriptor of an implementation artifact that realizes an operation or behavior.
stereotype.TImplementationArtifact.label=TImplementationArtifact
stereotype.TImplementationArtifacts.description=Collection of implementation artifacts referenced by a type or template.
stereotype.TImplementationArtifacts.label=TImplementationArtifacts
stereotype.TInterface.description=Definition of an interface grouping operations for a node, relationship or component.
stereotype.TInterface.label=TInterface
stereotype.TNodeTemplate.description=Instance template describing a node within a topology including properties and relationships.
stereotype.TNodeTemplate.label=TNodeTemplate
stereotype.TNodeType.description=Type definition for nodes specifying capabilities, requirements and interfaces.
stereotype.TNodeType.label=TNodeType
stereotype.TOperation.description=Definition of an operation including inputs, outputs and implementation references.
stereotype.TOperation.label=TOperation
stereotype.TParameter.description=Definition of a parameter used by operations or plans including type and default value.
stereotype.TParameter.label=TParameter
stereotype.TPlan.description=Definition of an orchestration plan or workflow associated with a template.
stereotype.TPlan.label=TPlan
stereotype.TPlans.description=Collection of plan definitions available for a template or type.
stereotype.TPlans.label=TPlans
stereotype.TPolicy.description=Definition of a policy that expresses governance, constraints or runtime behavior.
stereotype.TPolicy.label=TPolicy
stereotype.TPolicyType.description=Type descriptor for policy templates describing supported properties and semantics.
stereotype.TPolicyType.label=TPolicyType
stereotype.TPropertyConstraint.description=Constraint applied to a property value (range, pattern, or enumeration).
stereotype.TPropertyConstraint.label=TPropertyConstraint
stereotype.TPropertyDef.description=Definition of a property including its name, type, default and constraints.
stereotype.TPropertyDef.label=TPropertyDef
stereotype.TPropertyMapping.description=Mapping definition that connects a source property to a target property across templates.
stereotype.TPropertyMapping.label=TPropertyMapping
stereotype.TRelationshipTemplate.description=Template instance describing a relationship between nodes in the topology.
stereotype.TRelationshipTemplate.label=TRelationshipTemplate
stereotype.TRelationshipTemplateEnd.description=Definition describing one end of a relationship template including target or source role.
stereotype.TRelationshipTemplateEnd.label=TRelationshipTemplateEnd
stereotype.TRelationshipType.description=Type definition for relationships including their semantics, properties and interfaces.
stereotype.TRelationshipType.label=TRelationshipType
stereotype.TRequirement.description=Instance-level requirement that must be satisfied by matching capabilities from other elements.
stereotype.TRequirement.label=TRequirement
stereotype.TRequirementDefinition.description=Definition of a requirement type including expected properties and multiplicity.
stereotype.TRequirementDefinition.label=TRequirementDefinition
stereotype.TRequirementDefinitionType.description=Definition of a requirement type that specifies properties, multiplicity and expected targets.
stereotype.TRequirementDefinitionType.label=TRequirementDefinitionType
stereotype.TRequirementRef.description=Reference to a requirement definition or instance used to link templates via requirements.
stereotype.TRequirementRef.label=TRequirementRef
stereotype.TServiceTemplate.description=Top-level container describing a service template, its topology and exported artifacts.
stereotype.TServiceTemplate.label=TServiceTemplate
stereotype.TTopologyElementInstanceStates.description=Collection holding runtime instance state entries for topology elements.
stereotype.TTopologyElementInstanceStates.label=TTopologyElementInstanceStates
stereotype.TTopologyTemplate.description=Template describing the topology structure of nodes, relationships and groups for a service.
stereotype.TTopologyTemplate.label=TTopologyTemplate
stereotype.TargetElementType.description=Specification of valid target element types for relationships, mappings or references.
stereotype.TargetElementType.label=TargetElementType
stereotype.TargetInterfacesType.description=Collection type that groups interface definitions applicable to a target element.
stereotype.TargetInterfacesType.label=TargetInterfacesType
stereotype.TopologyTemplateDiagram.description=Diagram representing the topology template, showing nodes, relationships and groups.
stereotype.TopologyTemplateDiagram.label=TopologyTemplateDiagram
stereotype.ToscaDiagram.description=Diagram view representing TOSCA elements and their relationships.
stereotype.ToscaDiagram.label=ToscaDiagram
stereotype.ToscaElement.description=Base descriptor for any TOSCA model element (node, relationship, policy, etc.).
stereotype.ToscaElement.label=ToscaElement
stereotype.ToscaModel.description=Root model containing TOSCA service and topology templates.
stereotype.ToscaModel.label=ToscaModel
stereotype.Trigger.description=Defines a trigger condition used to start plans or policy actions.
stereotype.Trigger.label=Trigger

tagtype.Tag.description=Generic tag or attribute container used to annotate definitions.
tagtype.Tag.label=anyAttribute
tagtype.ref.description=Reference identifier used to refer to external definitions or types.
tagtype.ref.label=ref
tool.ArtifactTemplate.label=ArtifactTemplate
tool.ArtifactTemplate.tooltip=Open the artifact template editor.
tool.Capabilities_Type.label=Capabilities Type
tool.Capabilities_Type.tooltip=Open the capabilities type editor.
tool.Capability.label=Capability
tool.Capability.tooltip=Open or edit the capability definition.
tool.CapabilityDefinition.label=CapabilityDefinition
tool.CapabilityDefinition.tooltip=Open or edit capability definition details.
tool.CapabilityDefinitions.label=CapabilityDefinitions
tool.CapabilityDefinitions.tooltip=Open the collection of capability definitions.
tool.Constraint.label=Constraint
tool.Constraint.tooltip=Open or edit the constraint definition.
tool.Constraints.label=Constraints
tool.Constraints.tooltip=Open the list of constraints for the selected element.
tool.DeploymentArtifact.label=DeploymentArtifact
tool.DeploymentArtifact.tooltip=Open or edit the deployment artifact metadata.
tool.DeploymentArtifacts.label=DeploymentArtifacts
tool.DeploymentArtifacts.tooltip=Manage deployment artifacts attached to the element.
tool.Import.label=Import
tool.Import.tooltip=Import an external TOSCA definition or resource.
tool.Interface.label=Interface
tool.Interface.tooltip=Open or edit the interface and its operations.
tool.Metadata.label=Metadata
tool.Metadata.tooltip=View or edit metadata key/value pairs.
tool.NodeTemplate.label=NodeTemplate
tool.NodeTemplate.tooltip=Open or edit the node template properties and relationships.
tool.NodeType.label=NodeType
tool.NodeType.tooltip=Open or edit the node type definition.
tool.Plans.label=Plans
tool.Plans.tooltip=Manage orchestration plans available for this element.
tool.Policies_Type.label=Policies Type
tool.Policies_Type.tooltip=Open the policies type editor.
tool.Policy.label=Policy
tool.Policy.tooltip=Open or edit policy definitions attached to the template.
tool.PropertyDefinition.label=PropertyDefinition
tool.PropertyDefinition.tooltip=Open or edit the property definition (type, default, constraints).
tool.Property_(Node_Template).label=Property (Node Template)
tool.Property_(Node_Template).tooltip=Edit properties specific to the node template instance.
tool.Property_(Node_Type).label=Property (Node Type)
tool.Property_(Node_Type).tooltip=Edit properties defined on the node type.
tool.RelationshipTemplate.label=RelationshipTemplate
tool.RelationshipTemplate.tooltip=Open or edit the relationship template details.
tool.RelationshipType.label=RelationshipType
tool.RelationshipType.tooltip=Open or edit the relationship type definition.
tool.Requirement_NodeTemplate.label=Requirement (Node Template)
tool.Requirement_NodeTemplate.tooltip=Edit a requirement on a node template.
tool.Requirement_NodeType.label=Requirement (Node Type)
tool.Requirement_NodeType.tooltip=Edit a requirement defined on the node type.
tool.Requirements_NodeTemplate.label=Requirements (Node Template)
tool.Requirements_NodeTemplate.tooltip=Manage the collection of requirements for the node template.
tool.Requirements_NodeType.label=Requirements (Node Type)
tool.Requirements_NodeType.tooltip=Manage requirement definitions on the node type.
tool.Service\ Template.label=Service Template
tool.Service\ Template.tooltip=Edit the service template metadata and exported artifacts.
tool.TopologyTemplate.label=TopologyTemplate
tool.TopologyTemplate.tooltip=Open or edit the topology template.
tool.Trigger.label=Trigger
tool.Trigger.tooltip=Create or configure a trigger for plans or policies.

wizard.ServiceTemplateDiagram.detail=Creates a new service template diagram showing the service topology.
wizard.ServiceTemplateDiagram.info=Use this wizard to create a visual diagram for a service template.
wizard.ServiceTemplateDiagram.label=ServiceTemplateDiagram
wizard.TopologyTemplateDiagram.detail=Creates a topology template diagram illustrating nodes and relationships.
wizard.TopologyTemplateDiagram.info=Use this wizard to generate a topology diagram from a template.
wizard.TopologyTemplateDiagram.label=TopologyTemplateDiagram
wizard.ToscaDiagram.detail=Creates a diagram displaying TOSCA model elements and connections.
wizard.ToscaDiagram.info=Use this wizard to visualize TOSCA elements in a diagram view.
wizard.ToscaDiagram.label=ToscaDiagram
wizard.ServiceTemplateDiagram.detail=Creates a new service template diagram showing the service topology.
wizard.ServiceTemplateDiagram.info=Use this wizard to create a visual diagram for a service template.
wizard.ServiceTemplateDiagram.label=ServiceTemplateDiagram
wizard.TopologyTemplateDiagram.detail=Creates a topology template diagram illustrating nodes and relationships.
wizard.TopologyTemplateDiagram.info=Use this wizard to generate a topology diagram from a template.
wizard.TopologyTemplateDiagram.label=TopologyTemplateDiagram
wizard.ToscaDiagram.detail=Creates a diagram displaying TOSCA model elements and connections.
wizard.ToscaDiagram.info=Use this wizard to visualize TOSCA elements in a diagram view.
wizard.ToscaDiagram.label=ToscaDiagram
